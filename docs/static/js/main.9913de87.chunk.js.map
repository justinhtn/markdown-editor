{"version":3,"sources":["App.js","index.js"],"names":["defaultMarkdown","CopyButton","props","react_default","a","createElement","id","onClick","handleCopy","status","App","_this","Object","classCallCheck","this","_super","call","copyCodeToClipboard","state","textArea","select","document","execCommand","getSelection","removeAllRanges","addRange","createRange","setState","copied","input","handleChange","bind","assertThisInitialized","event","target","value","_this2","Fragment","ref","textarea","onChange","placeholder","defaultValue","App_CopyButton","dangerouslySetInnerHTML","__html","marked","React","Component","rootElement","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"oNAIMA,EAAe,ynBAsCfC,EAAa,SAACC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cAAcC,QAASL,EAAMM,YAClCN,EAAMO,SAoEEC,oDA9Db,SAAAA,EAAYR,GAAO,IAAAS,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAI,EAAAC,KAAAF,KAAMZ,IAwBRe,oBAAsB,SAACC,GACLP,EAAKQ,SACbC,SACRC,SAASC,YAAY,QACrBD,SAASE,eAAeC,kBACxBH,SAASE,eAAeE,SAASJ,SAASK,eAE1Cf,EAAKgB,SAAS,CACZC,OAAQ,YA9BVjB,EAAKO,MAAQ,CACXW,MAAO7B,EACP4B,OAAQ,QAGVjB,EAAKmB,aAAenB,EAAKmB,aAAaC,KAAlBnB,OAAAoB,EAAA,EAAApB,CAAAD,IACpBA,EAAKM,oBAAsBN,EAAKM,oBAAoBc,KAAzBnB,OAAAoB,EAAA,EAAApB,CAAAD,IATVA,kEAajBG,KAAKa,SAAS,CACZE,MAAO7B,yCAIEiC,GACXnB,KAAKa,SAAS,CACZE,MAAOI,EAAMC,OAAOC,MACpBP,OAAQ,0CAgBH,IAAAQ,EAAAtB,KACP,OACEX,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,SAAP,KACElC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACNH,EAAAC,EAAAC,cAAA,YACEiC,IAAK,SAACC,GAAD,OAAeH,EAAKjB,SAAWoB,GACpCjC,GAAG,SACHkC,SAAU1B,KAAKgB,aACfW,YAAY,6BACZC,aAAc1C,IAEhBG,EAAAC,EAAAC,cAACsC,EAAD,CACElC,OAAQK,KAAKI,MAAMU,OACnBpB,WAAY,kBAAM4B,EAAKnB,yBAEzBd,EAAAC,EAAAC,cAAA,OACEC,GAAG,UACHsC,wBAAyB,CAAEC,OAAQC,IAAOhC,KAAKI,MAAMW,mBAvD/CkB,IAAMC,WC7ClBC,EAAc5B,SAAS6B,eAAe,QAC5CC,IAASC,OACPjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,WAAP,KACElD,EAAAC,EAAAC,cAACiD,EAAD,OAEFL","file":"static/js/main.9913de87.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport marked from \"marked\";\n\nconst defaultMarkdown = `An h1 header\n============\n\nParagraphs are separated by a blank line.\n\n2nd paragraph. *Italic*, **bold**, and \\`monospace\\`. Itemized lists\nlook like:\n\n  * this one\n  * that one\n  * the other one\n  > Block quotes are\n  > written like so.\n  >\n  > They can span multiple paragraphs,\n  > if you like.\n  \nThree dots ... will be converted to an ellipsis.\n  Unicode is supported. â˜º\n  \nAn h2 header\n------------\n  \n  Here's a numbered list:\n  \n   1. first item\n   2. second item\n   3. third item\n  \nHere's a code sample:\n  \n~~~\nfor (let i=0; i < groceryList.length; i++ {\n    console.log(i) \n}\n~~~ \n`;\n\nconst CopyButton = (props) => {\n  return (\n    <div id=\"copy-button\" onClick={props.handleCopy}>\n      {props.status}\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: defaultMarkdown,\n      copied: \"Copy\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.copyCodeToClipboard = this.copyCodeToClipboard.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      input: defaultMarkdown,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value,\n      copied: \"Copy\",\n    });\n  }\n\n  copyCodeToClipboard = (state) => {\n    const context = this.textArea;\n    context.select();\n    document.execCommand(\"copy\");\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(document.createRange());\n\n    this.setState({\n      copied: \"Copied\",\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"container\">\n          <textarea\n            ref={(textarea) => (this.textArea = textarea)}\n            id=\"editor\"\n            onChange={this.handleChange}\n            placeholder=\"Your markdown goes here...\"\n            defaultValue={defaultMarkdown}\n          />\n          <CopyButton\n            status={this.state.copied}\n            handleCopy={() => this.copyCodeToClipboard()}\n          />\n          <div\n            id=\"preview\"\n            dangerouslySetInnerHTML={{ __html: marked(this.state.input) }}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}